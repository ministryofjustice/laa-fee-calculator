version: 2.1

references:
  setup_python_env: &setup_python_env
    run:
      name: Set up python dependencies
      command: |
        apk add linux-headers
        apk add python3-dev
        python3 -m venv venv
        pip3 install -r requirements/base.txt

# ------------------
# EXECUTORS
# ------------------
executors:
  cloud-platform-executor:
    docker:
      - image: ministryofjustice/cloud-platform-tools
        environment:
          GITHUB_TEAM_NAME_SLUG: laa-get-paid
          APPLICATION_DEPLOY_NAME: laa-fee-calculator
          DJANGO_SECRET_KEY: real-secret-not-needed-here

# ------------------
# COMMANDS
# ------------------
commands:
  build-image:
    description: >
      Build laa-fee-calculator docker image
    steps:
      - run:
          name: Build laa-fee-calculator docker image
          command: |
            export BUILD_DATE=$(date -Is) >> $BASH_ENV
            source $BASH_ENV
            docker build \
              --build-arg DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY} \
              --build-arg VERSION_NUMBER=${CIRCLE_BUILD_NUM} \
              --build-arg COMMIT_ID=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=${BUILD_DATE} \
              --build-arg BUILD_TAG=${CIRCLE_BRANCH} \
              -t app .

  push-image:
    description: >
      Push laa-fee-calculator docker image
    steps:
      - run:
          name: Push laa-fee-calculator docker image
          command: |
            aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_ENDPOINT}

            component=app
            docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${component}-${CIRCLE_SHA1}"
            docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${component}-${CIRCLE_SHA1}"

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${component}-latest"
              docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${component}-latest"
            fi

  deploy-to:
    description: >
      Deploy laa-fee-calculator to the specified environment
    parameters:
      cluster:
        description: destination clusters (live or live-1 only)
        type: string
      environment:
        description: destination environment
        type: string
    steps:
      - checkout
      - run:
          name: Authenticate with cluster
          command: |
            echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
            kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=${K8S_CLUSTER_URL}
            kubectl config set-credentials circleci --token=$(echo -n ${K8S_TOKEN} | base64 -d)
            kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=circleci --namespace=${K8S_NAMESPACE}
            kubectl config use-context ${K8S_CLUSTER_NAME}
            kubectl --namespace=${K8S_NAMESPACE} get pods
      - run:
          name: Decrypt secrets file
          command: |
            echo "${GIT_CRYPT_KEY}" | base64 -d > git-crypt.key
            git-crypt unlock git-crypt.key
      - run:
          name: deploying to << parameters.cluster >> cluster, << parameters.environment >> namespace
          command: |
            docker_image_tag=${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:app-${CIRCLE_SHA1}
            kubectl set image -f kubernetes_deploy/<< parameters.cluster >>/<< parameters.environment >>/deployment.yaml app=${docker_image_tag} --local -o yaml \
            | kubectl apply -f -
            kubectl apply \
                -f kubernetes_deploy/<< parameters.cluster >>/<< parameters.environment >>/service.yaml \
                -f kubernetes_deploy/<< parameters.cluster >>/<< parameters.environment >>/ingress.yaml \
                -f kubernetes_deploy/<< parameters.cluster >>/<< parameters.environment >>/django-secret.yaml

            sentry_dsn_secret=kubernetes_deploy/<< parameters.cluster >>/<< parameters.environment >>/sentry-dsn.yaml
            [ -f "$sentry_dsn_secret" ] && kubectl apply -f $sentry_dsn_secret

            kubectl annotate deployments/laa-fee-calculator kubernetes.io/change-cause="$(date) - circleCI deploying: $docker_image_tag"

# ------------------
# JOBS
# ------------------
jobs:
  test:
    executor: cloud-platform-executor
    parallelism: 2
    steps:
      - checkout
      - *setup_python_env
      - run:
          name: Split and run tests
          command: |
            TESTDOTPATHS=$(circleci tests glob "fee_calculator/apps/calculator/tests/**/test_*.py" | sed -e 's|\.py||g' -e 's|/|.|g' | circleci tests split)
            python3 manage.py test $TESTDOTPATHS --verbosity=1 --noinput

  build_and_push_image:
    executor: cloud-platform-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - build-image
      - push-image

  dev_live_1_deploy:
    executor: cloud-platform-executor
    steps:
      - deploy-to:
          cluster: live-1
          environment: dev

  dev_live_deploy:
    executor: cloud-platform-executor
    steps:
      - deploy-to:
          cluster: live
          environment: dev

  staging_live_1_deploy:
    executor: cloud-platform-executor
    steps:
      - deploy-to:
          cluster: live-1
          environment: staging

  staging_live_deploy:
    executor: cloud-platform-executor
    steps:
      - deploy-to:
          cluster: live
          environment: staging

  production_live_1_deploy:
    executor: cloud-platform-executor
    steps:
      - deploy-to:
          cluster: live-1
          environment: production

# ------------------
# WORKFLOWS
# ------------------
workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - test
      - build_and_push_image:
          requires:
            - test
          context:
            - laa-fee-calculator-base
      - dev_live_1_deploy_approval:
          type: approval
          requires:
            - build_and_push_image
      - dev_live_1_deploy:
          requires:
            - dev_live_1_deploy_approval
          context:
            - laa-fee-calculator-base
            - laa-fee-calculator-live-1-dev
      - dev_live_deploy_approval:
          type: approval
          requires:
            - build_and_push_image
      - dev_live_deploy:
          requires:
            - dev_live_deploy_approval
          context:
            - laa-fee-calculator-base
            - laa-fee-calculator-live-dev
      - staging_live_1_deploy_approval:
          type: approval
          requires:
            - dev_live_1_deploy
      - staging_live_1_deploy:
          requires:
            - staging_live_1_deploy_approval
          context:
            - laa-fee-calculator-base
            - laa-fee-calculator-live-1-staging
      - staging_live_deploy_approval:
          type: approval
          requires:
            - dev_live_deploy
      - staging_live_deploy:
          requires:
            - staging_live_deploy_approval
          context:
            - laa-fee-calculator-base
            - laa-fee-calculator-live-staging
      - production_live_1_deploy_approval:
          type: approval
          requires:
            - staging_live_deploy
            - staging_live_1_deploy
          filters:
            branches:
                only:
                  - master
      - production_live_1_deploy:
          requires:
            - production_live_1_deploy_approval
          context:
            - laa-fee-calculator-base
            - laa-fee-calculator-live-1-production

